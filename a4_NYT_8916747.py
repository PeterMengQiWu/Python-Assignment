# Course: ITI1120F
# Assignment 4 Part 2
# Wu, Peter
# 8916747
def wait_for_user():
    '''()->None
    Pauses the program until the user presses enter and displays menu'''
    try:
         input("\nPress enter to continue. ")
         print()
    except SyntaxError:
         pass
        
    print("===================================================") # Menu
    print("What would you like to do? Enter 1, 2, 3, 4, 5, 6 or Q for answer.")
    print("1: Look up year range")
    print("2: Look up month/year")
    print("3: Search for author")
    print("4: Search for title")
    print("5: Number of authors with at least x bestsellers")
    print("6: List y authors with the most bestsellers")
    print("Q: Quit")
    print("===================================================")
    

# Option 1 function
def search_year(booklist, x, y): # Binary Search
    '''(2D_list)->list
    Returns list of indexes of booklist that contains first occurrence of x and last occurrence of y'''
    low = 0
    high = len(booklist)-1
    location = -1
    index = []
    while low <= high: # Searches first occurrence of x (running time O(k+logn)
        mid = (low+high)//2
        if booklist[mid][3][:4] < x:
            low = mid + 1

        elif x in booklist[mid][3]:
            location = mid
            high = mid - 1

        elif booklist[mid][3][:4] > x: 
            high = mid - 1
            
    if location == -1:
        return location

    else:
        index.append(location)
    
    low = 0
    high = len(booklist)-1
    location = -1
    while low <= high: # Searches last occurrence of y (running time O(k+logn))
        mid = (low+high)//2
        if booklist[mid][3][:4] > y:
            high = mid - 1

        elif y in booklist[mid][3]:
            location = mid
            low = mid + 1

        elif booklist[mid][3][:4] < y:
            low = mid + 1

    if location == -1:
        return location

    else:
        index.append(location)

    return index

# Option 2 function
def search_month_year(booklist, year, month): # Binary Search
    '''(2D_list)->list
    Returns indexes of booklist that contains first occurrence of x and last occurrence of y'''
    key = ''
    if len(month) == 1:
        key = year+'-'+'0'+month

    else:
        key = year+'-'+month

    low = 0
    high = len(booklist)-1
    location = -1
    index = []
    while low <= high: # Searches first occurrence of key (running time O(k+logn)
        mid = (low+high)//2
        if booklist[mid][3][:7] < key:
            low = mid + 1

        elif key in booklist[mid][3]:
            location = mid
            high = mid - 1

        elif booklist[mid][3][:7] > key: 
            high = mid - 1
            
    if location == -1:
        return location

    else:
        index.append(location)
    
    low = 0
    high = len(booklist)-1
    location = -1
    while low <= high: # Searches last occurrence of key (running time O(k+logn))
        mid = (low+high)//2
        if booklist[mid][3][:7] > key:
            high = mid - 1

        elif key in booklist[mid][3]:
            location = mid
            low = mid + 1

        elif booklist[mid][3][:7] < key:
            low = mid + 1

    if location == -1:
        return location

    else:
        index.append(location)

    return index

# Option 3 function
def search_author(booklist, author): # Linear Search
    '''(list,str)->list
    Returns list of indexes that author is in booklist'''
    index = []
    for i in range(len(booklist)):
        if author.lower() in booklist[i][1].lower():
            index.append(i)

    return index

# Option 4 function
def search_title(booklist, title): # Linear Search
    '''(list,str)->list
    Returns list of indexes that title is in booklist'''
    index = []
    for i in range(len(booklist)):
        if title.lower() in booklist[i][0].lower():
            index.append(i)

    return index
        
# Helper function
def frequency(booklist):
    '''(2D_list)->list
    Returns a list consisting of number of best sellers of each author in booklist'''
    f = []
    for i in range(len(booklist)):
          condition = False
          for j in range(len(f)):
               if(booklist[i][1] == f[j][0]):
                    f[j][1] = f[j][1]+1
                    condition = True
          if(not(condition)):
               f.append([booklist[i][1],1 ])
               
    for i in range(len(f)): # Sorts the list using bubble sort
        for j in range(len(f)-1-i):
            if f[j][1] < f[j+1][1]:
                temp = f[j]
                f[j] = f[j+1]
                f[j+1] = temp
    return f

# Option 5 function
def num_of_bestsellers(l, x): # Uses l (generated by function frequency()) to determine number of authors that have at least x bestsellers
    '''(list,int)->int
    Returns the index of l that has the last occurrence of x'''
    for i in range(len(l)-1, -1, -1):
        if x <= l[i][1]:
            return i
    return -1

# Option 6 function
def most_bestsellers(l, y): # Uses l (generated by function frequency()) to determine list y authors with the most bestsellers
    '''(list,int)->None
    Prints top y authors that have the most number of bestsellers.'''
    if y > len(l):
        print("Unfortunately there are only", len(l), "authors in this list. All of the authors and their number of bestsellers will be displayed")
        y = len(l)
        
    print("Top", y, "authors by the number of NYT bestsellers is:")
    for i in range(y):
          print(str(i+1)+'.', l[i][0])

# main    
List = open('bestsellers.txt').read().splitlines()
booklist = []
for line in List:
    booklist.append(line.split('\t'))

for i in range(len(booklist)):
    for j in range(len(booklist[i])):
        booklist[i][j] = booklist[i][j].strip()

    date = booklist[i][3].split('/') # Stores date of book

    if len(date[0]) == 1 and len(date[1]) == 1: # Changes format of date to sort
        booklist[i][3] = date[2] + '-0' + date[0] + '-0' + date[1]

    elif len(date[0]) == 1:
        booklist[i][3] = date[2] + '-0' + date[0] + '-' + date[1]

    elif len(date[1]) == 1:
        booklist[i][3] = date[2] + '-' + date[0] + '-0' + date[1]

    else:
        booklist[i][3] = date[2] + '-' + date[0] + '-' + date[1]

for i in range(len(booklist)): # Sorts booklist in terms of date
    for j in range(len(booklist)-1-i):
        if booklist[j+1][3] < booklist[j][3]:
            temp = booklist[j]
            booklist[j] = booklist[j+1]
            booklist[j+1] = temp

l = frequency(booklist) # Gets the returned list from frequency function
print("===================================================") # Menu
print("What would you like to do? Enter 1, 2, 3, 4, 5, 6 or Q for answer.")
print("1: Look up year range")
print("2: Look up month/year")
print("3: Search for author")
print("4: Search for title")
print("5: Number of authors with at least x bestsellers")
print("6: List y authors with the most bestsellers")
print("Q: Quit")
print("===================================================")
ans = ''
while ans != 'q' and ans != 'Q':
    ans = input("Answer (1, 2, 3, 4, 5, 6, Q or q): ")

    # Option 1
    if ans == '1':
        x = None
        while x == None:
            try:
                x=int(input("Enter beginning year: "))
                
            except ValueError: # When input is not an integer
                print("You enter something that is not an integer.")
                continue
            
            if x <1000 or x >9999:
                    print("Please enter a four digit integer for the year.")
                    x=None
                    
        y = None
        while y == None:
            try:
                y=int(input("Enter ending year: "))
            except ValueError: # When input is not an integer
                print("You enter something that is not an integer.")
                continue
            
            if y <1000 or y >9999:
                    print("Please enter a four digit integer for the year.")
                    y=None
        
        index = search_year(booklist,str(x),str(y))
        if index == -1 or (x > y and len(index) == 2):
            print("No books found in given year range.")
            
        else:
            print("The books that are bestsellers from year", x, "to year", y, "are:")
            for i in range(index[0], index[1]+1):
                print(booklist[i][0]+',', "by", booklist[i][1], "("+booklist[i][3]+")")
            
        wait_for_user()

    # Option 2
    elif ans == '2':
        year = None
        while year == None:
            try:
                year=int(input("Enter a year: "))
                
            except ValueError: # When input is not an integer
                print("You enter something that is not an integer.")
                continue
            
            if year <1000 or year >9999:
                    print("Please enter a four digit integer for the year.")
                    year=None
                    
        month = None
        while month == None:
            try:
                month=int(input("Enter month (as an integer, 1-12): "))
            except ValueError: # When input is not an integer
                print("You enter something that is not an integer.")
                continue
            
            if month <1 or month >12:
                print("Invalid integer. Must be 1 - 12. Try again.")
                month=None
                      
        index = search_month_year(booklist, str(year), str(month))
        if index == -1:
            print("No books are found with given year and month")

        else:
            print("The books that are bestsellers in month", month, "year", year, "are:")
            for i in range(index[0], index[1]+1):
                print(booklist[i][0]+',', "by", booklist[i][1], "("+booklist[i][3]+")")
            
        wait_for_user()

    # Option 3
    elif ans == '3':
        author = '0'
        while author.isdigit():
            author = input("Enter an author's name (or part of a name): ")
                
            if author.isdigit(): # When input is a number
                print("You entered something that is a number. Please enter a string.")

        index = search_author(booklist, author)
        if len(index) == 0:
            print("No books are found with author's name that contains", author)

        else:
            print("Books written by authors whose names contain", author, "are:")
            for i in index:
                print(booklist[i][0]+',', "by", booklist[i][1], "("+booklist[i][3]+")")

        wait_for_user()

    # Option 4
    elif ans == '4':
        title = '0'
        while title.isdigit():
            title = input("Enter a title (or part of a title): ")

            if title.isdigit(): # When input is a number
                print("You entered something that is an integer. Please enter a string.")
               

        index = search_title(booklist, title)
        if len(index) == 0:
            print("No books are found with title that contains", title)
        else:
            print("Books' titles that contain", title, "are:")
            for i in index:
                print(booklist[i][0]+',', "by", booklist[i][1], "("+booklist[i][3]+")")

        wait_for_user()
        
    # Option 5
    elif ans == '5':
        x = None
        while x == None:
            try:
                x = int(input("Enter an integer bigger than zero: "))
            except ValueError: # When input is not an integer
                print("Number must be an integer.")
                continue

            if x < 1:
                print("Number must be at least one. Try again.")
                x = None
                    
        index = num_of_bestsellers(l, x)
        if index == -1:
            print("There is no author that has at least", x, "bestsellers.")

        else:
            print("The list of authors with at least", x, "NYT bestsellers is:")
            for i in range(index+1):
                print(l[i][0], "with", l[i][1], "bestsellers.")

        wait_for_user()

    # Option 6
    elif ans == '6':
        y = None
        while y == None:
            try:
                y = int(input("Enter an integer bigger than zero: "))
            except ValueError: # When input is not an integer
                print("Number must be an integer.")
                continue

            if y < 1:
                print("Number must be at least one. Try again.")
                y = None
                
        most_bestsellers(l, y)
        wait_for_user()
        
    

    try:
        if int(ans) > 6 or int(ans) < 1:
            print("Invaild input. Try again.")
            
        
    except ValueError:
        if ans != 'q' and ans != 'Q':
            print("If you answer is not Q or q, then it must be an integer.")
        continue
    
print("Good bye!")        


